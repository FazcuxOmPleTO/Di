local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Rota",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Carregando...",
   LoadingSubtitle = "oi sou lyrics!",
   Theme = "DarkBlue", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = rota, -- Create a custom folder for your hub/game
      FileName = "Rota"
   },

   Discord = {
      Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "calma", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "coloca a key ai bot",
      Subtitle = "Sistema de Chave",
      Note = "Acesso restrito.", -- Use this to tell the user how to get a key
      FileName = "Chave", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"bot"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

Rayfield:Notify({
   Title = "Agradecimento",
   Content = "xita baixo nengue",
   Duration = 6.5,
   Image = 4483362458,
})

local Tab = Window:CreateTab("AutoFarm", 97682995973876) -- Title, Image
local Divider = Tab:CreateDivider()

local Paragraph = Tab:CreateParagraph({Title = "Autofarm Atualizado e Funcionando!", Content = "_____________________________"})
local Divider = Tab:CreateDivider()

local Button = Tab:CreateButton({
   Name = "Iniciar AutoFarm",
   Callback = function()
local utility = {}
local vnoclipParts = {}
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local playerName = game.Players.LocalPlayer.Name
local loopAtivo = true

local VELOCIDADE_FIXA = 225

UserInputService.InputBegan:Connect(function(input, processed)
    if not processed and input.KeyCode == Enum.KeyCode.F then
        loopAtivo = not loopAtivo
        warn("AutoFarm " .. (loopAtivo and "reativado" or "pausado"))
    end
end)

local function safeIpairs(tbl)
    if type(tbl) ~= "table" then return function() end end
    return ipairs(tbl)
end

function utility.getService(service)
    local _game = cloneref and cloneref(game) or game
    local ok, result = pcall(function()
        return cloneref and cloneref(_game:GetService(service)) or _game:GetService(service)
    end)
    return ok and result or nil
end

function utility.CalculatePosition(target)
    if typeof(target) == "Vector3" then
        return CFrame.new(target)
    elseif typeof(target) == "CFrame" then
        return target
    elseif type(target) == "table" then
        return CFrame.new(unpack(target))
    elseif typeof(target) == "Instance" then
        if target:IsA("Model") then
            if not target.PrimaryPart then
                local part = target:FindFirstChildWhichIsA("BasePart")
                if part then target.PrimaryPart = part end
            end
            if target.PrimaryPart then
                return target.PrimaryPart.CFrame
            end
        elseif target.Position then
            return CFrame.new(target.Position)
        end
    end
    return CFrame.new(0, 0, 0)
end

function utility.TweenModel(model, destinationCFrame, speed)
    if not model or not model.PrimaryPart then return end
    local rs = RunService
    local startCFrame = model:GetPrimaryPartCFrame()
    local distance = (startCFrame.Position - destinationCFrame.Position).Magnitude
    local duration = distance / VELOCIDADE_FIXA

    for _, p in pairs(model:GetDescendants()) do
        if p:IsA("BasePart") then
            p.Anchored = false
            p.AssemblyLinearVelocity = Vector3.zero
            p.AssemblyAngularVelocity = Vector3.zero
        end
    end

    local AngularClient = Instance.new("BindableEvent")
    utility._lastComplete = AngularClient

    local startTime = tick()
    local conn
    conn = rs.Heartbeat:Connect(function()
        local now = tick()
        local alpha = math.clamp((now - startTime) / duration, 0, 1)
        local cf = startCFrame:Lerp(destinationCFrame, alpha)
        model:SetPrimaryPartCFrame(cf)
        for _, part in ipairs(model:GetDescendants()) do
            if part:IsA("BasePart") then
                part.AssemblyLinearVelocity = Vector3.zero
                part.AssemblyAngularVelocity = Vector3.zero
            end
        end
        if alpha >= 1 then
            conn:Disconnect()
            model:SetPrimaryPartCFrame(destinationCFrame)
            if utility._lastComplete then
                utility._lastComplete:Fire()
                utility._lastComplete:Destroy()
                utility._lastComplete = nil
            end
        end
    end)
end

function utility.TweenModelCompletedWait()
    if utility._lastComplete then
        utility._lastComplete.Event:Wait()
    end
end

function utility.findVehicle()
    local players = utility.getService("Players")
    local localPlayer = players and players.LocalPlayer
    if not localPlayer then return nil end
    local folder = workspace:FindFirstChild("CarrosSpawnados")
    if not folder then return nil end
    for _, v in safeIpairs(folder:GetChildren()) do
        local info = v:FindFirstChild("Info")
        if info then
            local owner = info:FindFirstChild("Owner")
            if owner and owner.Value == localPlayer.Name then return v end
        end
    end
    return nil
end

function utility.SetTweenVehicle(CFrameDestination)
    if not CFrameDestination then return end
    local vehicle = utility.findVehicle()
    local CalculatePosition = utility.CalculatePosition(CFrameDestination)
    if vehicle then
        if not vehicle.PrimaryPart then
            local mainPart = vehicle:FindFirstChildWhichIsA("BasePart")
            if mainPart then vehicle.PrimaryPart = mainPart end
        end

        local seat = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").SeatPart
        local vehicleModel = seat and seat:FindFirstAncestorOfClass("Model") or vehicle

        task.wait(0.1)
        for _, v in pairs(vehicleModel:GetDescendants()) do
            if v:IsA("BasePart") and v.CanCollide then
                table.insert(vnoclipParts, v)
                v.CanCollide = false
            end
        end

        task.wait()
        utility.TweenModel(vehicle, CalculatePosition, VELOCIDADE_FIXA)
        utility.TweenModelCompletedWait()

        for _, v in pairs(vnoclipParts) do
            v.CanCollide = true
        end
        vnoclipParts = {}
        return true
    else
        print("Seu veículo não foi encontrado!")
        return false
    end
end

function utility.BaixarVeiculoTemporariamente()
    local vehicle = utility.findVehicle()
    if vehicle then
        -- Garantir PrimaryPart
        if not vehicle.PrimaryPart then
            local mainPart = vehicle:FindFirstChildWhichIsA("BasePart")
            if mainPart then
                vehicle.PrimaryPart = mainPart
            else
                warn("Veículo não tem PrimaryPart válida.")
                return
            end
        end

        -- Aplicar noclip imediatamente antes do movimento
        for _, part in pairs(vehicle:GetDescendants()) do
            if part:IsA("BasePart") and part.CanCollide then
                table.insert(vnoclipParts, part)
                part.CanCollide = false
            end
        end

        -- Tween para o subsolo
        local cfAtual = vehicle.PrimaryPart.CFrame
        local cfSubsolo = cfAtual * CFrame.new(0, -35, 0)
        utility.TweenModel(vehicle, cfSubsolo, VELOCIDADE_FIXA)
        utility.TweenModelCompletedWait()

        -- Congelar movimento
        local heartbeatConn = RunService.Heartbeat:Connect(function()
            for _, v in pairs(vehicle:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.AssemblyLinearVelocity = Vector3.zero
                    v.AssemblyAngularVelocity = Vector3.zero
                end
            end
        end)

        -- Aguardar tempo de espera subterrâneo
        task.wait(12)

        -- Encerrar travamento (colisão será restaurada no próximo tween)
        if heartbeatConn then heartbeatConn:Disconnect() end
    end
end

function utility.InteragirProximidades(targetPosition)
    local construcoes = workspace:FindFirstChild("Construcoes")
    if not construcoes then return end
    local locaisRotas = construcoes:FindFirstChild("LocaisRotas")
    if not locaisRotas then return end

    local prompts = {}
    for _, prompt in safeIpairs(locaisRotas:GetDescendants()) do
        if prompt:IsA("ProximityPrompt") and prompt.Parent:IsA("BasePart") then
            local distance = (prompt.Parent.Position - targetPosition).Magnitude
            if distance <= 29 then
                table.insert(prompts, prompt)
            end
        end
    end

    if #prompts > 0 then
        local mainPrompt = prompts[math.random(1, #prompts)]
        task.wait(0.137)
        pcall(function()
            fireproximityprompt(mainPrompt, true)
            task.wait((mainPrompt.HoldDuration or 1) + math.random())
            fireproximityprompt(mainPrompt, false)
        end)

        -- Após interação, descer o carro para proteção
        utility.BaixarVeiculoTemporariamente()
    end
end

local pontosFalsos = {
    CFrame.new(2988.90088, 22.5166702, 3156.82568),
    CFrame.new(3278.34033, 54.7228889, 2328.70532),
    CFrame.new(4201.99121, 4.30919647, 2509.82617),
    CFrame.new(3822.1687, 4.31638908, 1974.32397),
    CFrame.new(3800.9585, 48.973999, 3372.25415),
}

local function addMicroNoise(cf)
    return cf + Vector3.new(math.random(-2, 2), 0, math.random(-2, 2))
end

local function getPlayerFaction()
    local success, result = pcall(function()
        local systemFacs = workspace:FindFirstChild("SystemFacsRua")
        if not systemFacs then return nil end
        local facsOcupadas = systemFacs:FindFirstChild("FacsOcupadas")
        if not facsOcupadas then return nil end
        for _, fac in safeIpairs(facsOcupadas:GetChildren()) do
            local membros = fac:FindFirstChild("Membros")
            if membros and membros:FindFirstChild(playerName) then
                return fac.Name
            end
        end
        return nil
    end)
    if not success then
        warn("[ERRO] Ao detectar facção: " .. tostring(result))
        return nil
    end
    return result
end

local function getFactionRoutesCFrame()
    local factionName = getPlayerFaction()
    if not factionName then return nil end

    local success, result = pcall(function()
        local systemFacs = workspace:FindFirstChild("SystemFacsRua")
        if not systemFacs then return nil end

        local fac = systemFacs:FindFirstChild("FacsOcupadas"):FindFirstChild(factionName)
        if not fac then return nil end

        local melhorias = fac:FindFirstChild("MelhoriasProxys")
        if not melhorias then return nil end

        local rotas = melhorias:FindFirstChild("Rotas")
        if not rotas then return nil end

        local proxit = rotas:FindFirstChild("Proxit")
        if not proxit then return nil end

        local prompt = proxit:FindFirstChildOfClass("ProximityPrompt")
        if prompt and prompt.Parent and prompt.Parent:IsA("BasePart") then
            return prompt.Parent.CFrame + Vector3.new(0, 2, 0)
        end

        return nil
    end)

    if not success then
        warn("Erro ao obter coordenada da facção!" .. tostring(result))
        return nil
    end

    return result
end

function utility.checkPlayerInVehicle()
	local character = player.Character
	if not character then return false end

	local humanoid = character:FindFirstChildOfClass("Humanoid")
	if not humanoid then return false end

	local seat = humanoid.SeatPart
	if not seat then return false end

	local vehicle = utility.findVehicle()
	if not vehicle then return false end

	return seat:IsDescendantOf(vehicle)
end

function utility.forceRejoin()
	task.defer(function()
		local success, err = pcall(function()
			TeleportService:Teleport(game.PlaceId, player)
		end)
		if not success then
			warn("[Teleport ERRO]:", err)
		end
	end)
end

coroutine.wrap(function()
    while true do
        if loopAtivo then
            local cframes = {
                CFrame.new(4105.15137, 64.4651031, 482.882965, -0.113497302, 0.221895248, 0.968442559, -0.00584075926, 0.974575162, -0.223984882, -0.993521154, -0.0310781207, -0.109315619),
                CFrame.new(4219.3374, 74.9669495, 3166.12622, 0.431088239, -0.0753618702, -0.899157107, -0.0263625737, 0.995028675, -0.0960364044, 0.901924551, 0.065104261, 0.426958442),
                CFrame.new(1788.72302, 4.30489969, 2156.92188, 0.0213806406, 0.0225232076, 0.999517679, 0.000254597486, 0.999746025, -0.0225338005, -0.999771357, 0.000736261718, 0.0213694759),
                CFrame.new(361.122528, 30.455986, -841.140442, -0.581414104, 0.151928961, -0.799296737, -0.0179375876, 0.979777932, 0.199282452, 0.813410044, 0.130203083, -0.566931427),
                CFrame.new(569.097656, 4.65112209, 3193.24316, 0.99734354, 0.00110823882, 0.0728327483, 0.000802896393, 0.99965626, -0.0262055397, -0.0728367493, 0.0261944048, 0.9969998),
                CFrame.new(2763.05078, -2.09031916, 2740.63013, -0.103964806, -0.145493895, -0.983881533, -0.0144421114, 0.989358783, -0.14477779, 0.99447614, -0.000842468638, -0.104959734),
                CFrame.new(3206.22119, 4.58458328, 2260.93604, 0.00307788956, -0.0240117367, -0.999706924, 0.00170048152, 0.999710381, -0.0240065828, 0.999993801, -0.00162609352, 0.00311782956),
                CFrame.new(4223.43457, 4.63823986, 2415.22021, 0.0323573276, 0.021790944, 0.999238789, 0.00116096984, 0.999760807, -0.0218399223, -0.999475718, 0.00186676765, 0.032324288),
                CFrame.new(2879.26099, 4.58199167, 3181.17188, 0.999458849, -0.000999550801, -0.0328778066, 0.000256212894, 0.999744415, -0.022605557, 0.0328919962, 0.0225849003, 0.999203682),
                CFrame.new(3213.32446, 65.5097733, 671.534729, 0.137671217, -0.0245366283, -0.990173995, -0.000508352416, 0.999691248, -0.0248431452, 0.99047786, 0.00392354326, 0.137616232),
                CFrame.new(802.233093, 59.7998505, 2402.75073, -0.999849498, -0.00123223604, 0.0173058547, -0.00163992983, 0.999720991, -0.0235637482, -0.01727199, -0.0235885829, -0.999572515),
                CFrame.new(432.846771, 19.7031174, 889.635254, -0.993482113, 0.0684497654, 0.0911475942, 0.0579569377, 0.991883993, -0.113168553, -0.0981542021, -0.107148297, -0.989386141),
                CFrame.new(820.941711, 4.60487175, 2409.59863, -0.99926275, -0.000618405407, -0.0383865125, 0.00024763908, 0.999745607, -0.0225523133, 0.038390696, -0.0225451924, -0.999008417),
                CFrame.new(2343.80542, 4.30260563, 3768.93042, -0.99968797, -0.00050379266, 0.0249731895, -0.00107132399, 0.999741375, -0.0227174591, -0.0249552857, -0.0227371249, -0.999429941),
                CFrame.new(4037.37573, 13.8991241, -1730.19836, -0.0716072097, 0.0251205135, 0.997116506, 0.00814747252, 0.999664187, -0.0245995913, -0.997399628, 0.00636247126, -0.0717878342)
            }

            local finalMesa = getFactionRoutesCFrame()

            for _, cf in ipairs(cframes) do
                if not loopAtivo then break end

                local falso = pontosFalsos[math.random(1, #pontosFalsos)]
                utility.SetTweenVehicle(falso)
                task.wait(2)

                if not loopAtivo then break end

                local success = utility.SetTweenVehicle(addMicroNoise(cf))
                if success then
                    utility.InteragirProximidades(cf.Position)
                end
            end

            if loopAtivo and finalMesa then
                utility.SetTweenVehicle(pontosFalsos[math.random(1, #pontosFalsos)])
                task.wait(2)

                local success = utility.SetTweenVehicle(addMicroNoise(finalMesa))
                if success then
                    -- Corrigido: interação com o ProximityPrompt da mesa
                    local facName = getPlayerFaction()
                    if facName then
                        local prompt = workspace:FindFirstChild("SystemFacsRua")
                            and workspace.SystemFacsRua:FindFirstChild("FacsOcupadas")
                            and workspace.SystemFacsRua.FacsOcupadas:FindFirstChild(facName)
                            and workspace.SystemFacsRua.FacsOcupadas[facName]:FindFirstChild("MelhoriasProxys")
                            and workspace.SystemFacsRua.FacsOcupadas[facName].MelhoriasProxys:FindFirstChild("Rotas")
                            and workspace.SystemFacsRua.FacsOcupadas[facName].MelhoriasProxys.Rotas:FindFirstChild("Proxit")
                            and workspace.SystemFacsRua.FacsOcupadas[facName].MelhoriasProxys.Rotas.Proxit:FindFirstChildOfClass("ProximityPrompt")

                        if prompt then
                            pcall(function()
                                fireproximityprompt(prompt, true)
                                task.wait((prompt.HoldDuration or 1) + math.random())
                                fireproximityprompt(prompt, false)
                            end)
                        else
                            warn("[ERRO] Prompt da mesa não encontrado")
                        end
                    end

                    task.wait(2)
                end
            end
        end
        task.wait(0.5)
    end
end)()

local ScriptContext = cloneref(game:GetService("ScriptContext")) :: ScriptContext;
for Index, Connection_Error in next, getconnections(ScriptContext.Error) do
    if Connection_Error and typeof(Connection_Error.Disable) == "function" then
        task.wait()
        pcall(function()
            Connection_Error:Disable()
        end)
    end
end

local complementos = workspace:FindFirstChild("Complementos")
if complementos and complementos:IsA("Folder") then
	local aguas = complementos:FindFirstChild("Aguas")
	if aguas and aguas:IsA("Folder") then
		aguas:Destroy()
	end
end

local complementos = workspace:FindFirstChild("Complementos")
if complementos then
    local areias = complementos:FindFirstChild("Areias")
    if areias then
        areias:Destroy()
    end

    local limiteLimbo = complementos:FindFirstChild("LimiteLimbo")
    if limiteLimbo then
        limiteLimbo:Destroy()
    end
end

-- Script para executor (local, cliente)
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local function kickAoPular()
    local char = player.Character or player.CharacterAdded:Wait()
    local humanoid = char:WaitForChild("Humanoid")

    humanoid.Jumping:Connect(function(isJumping)
        if isJumping then
            player:Kick("Kickado por segurança: Saiu do veículo!")
        end
    end)
end

-- Rodar imediatamente
kickAoPular()

-- Também conectar quando morrer/renascer
player.CharacterAdded:Connect(function()
    task.wait(1)
    kickAoPular()
end)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local function verificarSentado()
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    -- Verifica a cada segundo se o jogador está sentado
    while true do
        if not humanoid.Sit then
            LocalPlayer:Kick("Saiu do veículo! Kickado por segurança!")
            break
        end
        task.wait(1)
    end
end

-- Verificar sempre que o personagem carregar ou recarregar
LocalPlayer.CharacterAdded:Connect(function()
    task.wait(1)
    verificarSentado()
end)

-- Executar se personagem já estiver carregado
if LocalPlayer.Character then
    verificarSentado()
end

return utility
   end,
})

local Button = Tab:CreateButton({
   Name = "⚠️ Detector de Staffs",
   Callback = function()
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local grupoMonitorado = 4738618

-- Lista de cargos que devem ser detectados
local cargosDetectar = {
    "[BIB]",
    "[SUP]",
    "[Responsavel]",
    "[Responsavel Perm Booster]",
    "[Responsavel Superior]"
}

-- Verifica se o cargo está na lista
local function cargoEhSuspeito(cargo)
    for _, nome in ipairs(cargosDetectar) do
        if cargo == nome then
            return true
        end
    end
    return false
end

-- Detecta se alguém tem o cargo alvo
local function detectarStaff(player)
    local success, role = pcall(function()
        return player:GetRoleInGroup(grupoMonitorado)
    end)

    if success and cargoEhSuspeito(role) then
        warn(player.Name .. " detectado com cargo suspeito: " .. role)

        if player == LocalPlayer then
            LocalPlayer:Kick("Dzn: Cargo não permitido detectado.")
        else
            LocalPlayer:Kick("Dzn: Outro jogador com cargo suspeito detectado no servidor.")
        end
    end
end

-- Verifica todos os jogadores atuais
for _, player in ipairs(Players:GetPlayers()) do
    detectarStaff(player)
end

-- Monitora novos jogadores entrando
Players.PlayerAdded:Connect(detectarStaff)
   end,
})
