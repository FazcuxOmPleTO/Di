ositiongame:HttpGet("https://raw.githubusercontent.com/Waza80/scripts-new/refs/heads/main/AXRemove.lua"))()




-- Combined: Bypass first -> after 6s start Cabesa 2.2 + Auto-Fire
-- Sem prints/logs (mínimo impacto no console). Use em executor cliente.

-- ====== HELPERS ======
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local function safeGetConnections(signal)
    local ok, res = pcall(function() return getconnections(signal) end)
    if ok and type(res) == "table" then
        return res
    end
    return {}
end

local function safeDisableConnections(conns)
    for _, c in ipairs(conns) do
        pcall(function() if c and c.Disable then c:Disable() end end)
    end
end

-- ====== BYPASS / ANTICHEAT (EXECUTA IMEDIATO) ======
do
    -- ExploitBan remote (silencioso)
    pcall(function()
        local remotes = ReplicatedStorage:FindFirstChild("Remotes")
        if remotes then
            local ExploitBan = remotes:FindFirstChild("ExploitBan")
            if ExploitBan then
                -- tenta neutralizar FireServer de forma segura
                pcall(function()
                    ExploitBan.FireServer = (function() return function() end end)()
                end)
            end
        end
    end)

    -- tenta neutralizar ZexisCamera.EndKillCam se existir
    pcall(function()
        local ZexisShared = ReplicatedStorage:FindFirstChild("ZexisShared")
        if ZexisShared and ZexisShared:FindFirstChild("Modules") then
            local ok, required = pcall(function()
                return require(ZexisShared.Modules.ZexisCamera)
            end)
            if ok and type(required) == "table" then
                pcall(function() required.EndKillCam = function() end end)
            end
        end
    end)

    -- desabilita conexões do próprio script (defensivo)
    pcall(function()
        safeDisableConnections(safeGetConnections(script:GetPropertyChangedSignal("Disabled")))
        safeDisableConnections(safeGetConnections(script:GetPropertyChangedSignal("Parent")))
        safeDisableConnections(safeGetConnections(script.AncestryChanged))
    end)

    -- animate (se existir) - safe disable
    pcall(function()
        local animate = script.Parent and script.Parent:FindFirstChild("Animate")
        if animate then
            safeDisableConnections(safeGetConnections(animate:GetPropertyChangedSignal("Disabled")))
            safeDisableConnections(safeGetConnections(animate:GetPropertyChangedSignal("Parent")))
            safeDisableConnections(safeGetConnections(animate.AncestryChanged))
        end
    end)

    -- espera char seguro
    local function waitForCharacter()
        local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        char:WaitForChild("Humanoid")
        char:WaitForChild("HumanoidRootPart")
        return char
    end

    local okChar, char = pcall(waitForCharacter)
    if not okChar or not char then
        -- não pode prosseguir com disables se não houver character
        char = LocalPlayer.Character
    end

    if char then
        pcall(function()
            local humanoid = char:FindFirstChild("Humanoid")
            local hrp = char:FindFirstChild("HumanoidRootPart")
            if humanoid then
                safeDisableConnections(safeGetConnections(humanoid:GetPropertyChangedSignal("WalkSpeed")))
                safeDisableConnections(safeGetConnections(humanoid:GetPropertyChangedSignal("JumpPower")))
                safeDisableConnections(safeGetConnections(humanoid:GetPropertyChangedSignal("PlatformStand")))
            end
            if hrp then
                safeDisableConnections(safeGetConnections(hrp:GetPropertyChangedSignal("Size")))
                safeDisableConnections(safeGetConnections(hrp:GetPropertyChangedSignal("CanCollide")))
                safeDisableConnections(safeGetConnections(hrp.ChildAdded))
            end
        end)

        -- remove highlights/box adornments adicionados localmente
        pcall(function()
            char.DescendantAdded:Connect(function(child)
                if child and (child:IsA("Highlight") or child:IsA("BoxHandleAdornment")) then
                    task.defer(function() pcall(function() child:Destroy() end) end)
                end
            end)
        end)
    end

    -- reaplica disables em CharacterAdded
    Players.LocalPlayer.CharacterAdded:Connect(function(newChar)
        task.wait(3)
        pcall(function()
            local newHum = newChar:FindFirstChild("Humanoid")
            local newHrp = newChar:FindFirstChild("HumanoidRootPart")
            if newHum then
                safeDisableConnections(safeGetConnections(newHum:GetPropertyChangedSignal("WalkSpeed")))
                safeDisableConnections(safeGetConnections(newHum:GetPropertyChangedSignal("JumpPower")))
                safeDisableConnections(safeGetConnections(newHum:GetPropertyChangedSignal("PlatformStand")))
            end
            if newHrp then
                safeDisableConnections(safeGetConnections(newHrp:GetPropertyChangedSignal("Size")))
                safeDisableConnections(safeGetConnections(newHrp:GetPropertyChangedSignal("CanCollide")))
                safeDisableConnections(safeGetConnections(newHrp.ChildAdded))
            end
            newChar.DescendantAdded:Connect(function(child)
                if child and (child:IsA("Highlight") or child:IsA("BoxHandleAdornment")) then
                    task.defer(function() pcall(function() child:Destroy() end) end)
                end
            end)
        end)
    end)

    -- monitoring de outros players (hitbox/ESP)
    local function disablePlayerMonitoring(player)
        pcall(function()
            if player.Character then
                local pchar = player.Character
                local phrp = pchar:FindFirstChild("HumanoidRootPart")
                if phrp then
                    safeDisableConnections(safeGetConnections(phrp:GetPropertyChangedSignal("Size")))
                end
                local highlight = pchar:FindFirstChildOfClass("Highlight") or pchar:FindFirstChildOfClass("BoxHandleAdornment")
                if highlight then pcall(function() highlight:Destroy() end) end
                pchar.DescendantAdded:Connect(function(child)
                    if child and (child:IsA("Highlight") or child:IsA("BoxHandleAdornment")) then
                        task.defer(function() pcall(function() child:Destroy() end) end)
                    end
                end)
            end

            player.CharacterAdded:Connect(function(newChar)
                task.wait(1)
                local newHrp = newChar:FindFirstChild("HumanoidRootPart")
                if newHrp then
                    safeDisableConnections(safeGetConnections(newHrp:GetPropertyChangedSignal("Size")))
                end
                newChar.DescendantAdded:Connect(function(child)
                    if child and (child:IsA("Highlight") or child:IsA("BoxHandleAdornment")) then
                        task.defer(function() pcall(function() child:Destroy() end) end)
                    end
                end)
            end)
        end)
    end

    for _, pl in pairs(Players:GetPlayers()) do
        if pl ~= LocalPlayer then pcall(function() disablePlayerMonitoring(pl) end) end
    end
    Players.PlayerAdded:Connect(function(pl) if pl ~= LocalPlayer then pcall(function() disablePlayerMonitoring(pl) end) end)
    
    -- disable CanCollide checks em todas parts do char atual (e futuros)
    local function disableCanCollideChecks(model)
        pcall(function()
            for _, v in pairs(model:GetDescendants()) do
                if v and v:IsA and v:IsA("BasePart") then
                    safeDisableConnections(safeGetConnections(v:GetPropertyChangedSignal("CanCollide")))
                end
            end
        end)
    end
    if char then pcall(function() disableCanCollideChecks(char) end) end
    Players.LocalPlayer.CharacterAdded:Connect(function(newChar) task.wait(3); pcall(function() disableCanCollideChecks(newChar) end) end)
end -- fim bypass do-block

-- ====== AGUARDA 6 SEGUNDOS E INICIA CABESA + AUTO-FIRE ======
task.spawn(function()
    task.wait(6) -- espera 6s

    -- ---------- CABESA 2.2 (limpo) ----------
    do
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local Workspace = workspace

        local currentSize = Vector3.new(2.2,2.2,2.2)
        local SCAN_DELAY = 2.2

        local function hasFaceMarker(obj)
            if not obj then return false end
            if obj:FindFirstChild("face") then return true end
            for _,c in ipairs(obj:GetChildren()) do
                if c:IsA("Decal") or c:IsA("Texture") then
                    return true
                end
            end
            return false
        end

        local function applyToPart(part, model)
            if not part or not model then return end
            if model == LocalPlayer.Character then return end
            if model:FindFirstChild("FakeVisualCabesa") then return end

            pcall(function()
                local fake = part:Clone()
                fake.Name = "FakeVisualCabesa"
                fake.Size = Vector3.new(1,1,1)
                fake.Transparency = 0
                fake.CanCollide = false
                fake.Anchored = false
                fake.Massless = true
                fake.Parent = model

                if fake:IsA("BasePart") then
                    pcall(function() fake.CFrame = part.CFrame end)
                end

                if part:IsA("BasePart") then
                    pcall(function() part.Size = currentSize end)
                    pcall(function() part.Transparency = 1 end)
                    pcall(function() part.CanCollide = false end)
                    pcall(function() part.Massless = true end)
                end

                local f = part:FindFirstChild("face")
                if f and f:IsA("Decal") then pcall(function() f.Transparency = 1 end) end
                for _,c in ipairs(part:GetChildren()) do
                    if c:IsA("Decal") or c:IsA("Texture") then
                        pcall(function() c.Transparency = 1 end)
                    end
                end

                if fake:IsA("BasePart") and part:IsA("BasePart") then
                    pcall(function()
                        local weld = Instance.new("WeldConstraint")
                        weld.Part0 = fake
                        weld.Part1 = part
                        weld.Parent = fake
                    end)
                end

                if part:IsA("BasePart") then
                    part:GetPropertyChangedSignal("Size"):Connect(function()
                        if part and part.Size ~= currentSize then
                            pcall(function() part.Size = currentSize end)
                        end
                    end)
                end
            end)
        end

        spawn(function()
            while true do
                for _, obj in ipairs(Workspace:GetDescendants()) do
                    if obj and obj:IsA and obj:IsA("BasePart") and hasFaceMarker(obj) then
                        local model = obj
                        while model and not model:IsA("Model") do
                            model = model.Parent
                        end
                        if model and model:IsA("Model") and model:FindFirstChildOfClass("Humanoid") then
                            pcall(function() applyToPart(obj, model) end)
                        end
                    end
                end
                task.wait(SCAN_DELAY)
            end
        end)
    end

    -- ---------- AUTO-FIRE compatível com CABESA 2.2 (limpo) ----------
    do
        local Players = game:GetService("Players")
        local RunService = game:GetService("RunService")
        local Workspace = game:GetService("Workspace")
        local LocalPlayer = Players.LocalPlayer
        local Camera = Workspace.CurrentCamera
        local VirtualUser = game:GetService("VirtualUser")

        local FirePositions = {
            Vector2.new(-0.707, -832),
            Vector2.new(-0.654, -246)
        }
        local centerTolerance = 30
        local maxDistance = 300

        local function hasFaceMarker(obj)
            if not obj then return false end
            if obj:FindFirstChild("face") then return true end
            for _,c in ipairs(obj:GetChildren()) do
                if c:IsA("Decal") or c:IsA("Texture") then
                    return true
                end
            end
            return false
        end

        local function canSeeTarget(targetPart)
            if not targetPart or not targetPart.Parent then return false end
            local origin = Camera.CFrame.Position
            local direction = (targetPart.Position - origin)
            local raycastParams = RaycastParams.new()
            raycastParams.FilterDescendantsInstances = { LocalPlayer.Character }
            raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

            local result = Workspace:Raycast(origin, direction, raycastParams)
            if result then
                return result.Instance:IsDescendantOf(targetPart.Parent)
            end
            return true
        end

        local function IsAtScreenCenter(screenPos)
            local screenCenter = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)
            return (Vector2.new(screenPos.X, screenPos.Y) - screenCenter).Magnitude <= centerTolerance
        end

        RunService.RenderStepped:Connect(function()
            if not LocalPlayer or not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                return
            end

            local hrpPos = LocalPlayer.Character.HumanoidRootPart.Position

            for _, obj in ipairs(Workspace:GetDescendants()) do
                if obj and obj:IsA and obj:IsA("BasePart") and hasFaceMarker(obj) then
                    local model = obj
                    while model and not model:IsA("Model") do
                        model = model.Parent
                    end
                    if model and model:FindFirstChildOfClass("Humanoid") then
                        local player = Players:GetPlayerFromCharacter(model)
                        if player and player ~= LocalPlayer then
                            if obj.Name ~= "FakeVisualCabesa" then
                                local humanoid = model:FindFirstChildOfClass("Humanoid")
                                if humanoid and humanoid.Health > 0 then
                                    local distance = (hrpPos - obj.Position).Magnitude
                                    if distance <= maxDistance then
                                        local screenPos, onScreen = Camera:WorldToViewportPoint(obj.Position)
                                        if onScreen and IsAtScreenCenter(screenPos) and canSeeTarget(obj) then
                                            for _, pos in ipairs(FirePositions) do
                                                pcall(function()
                                                    VirtualUser:CaptureController()
                                                    VirtualUser:ClickButton1(Vector2.new(pos.X, pos.Y))
                                                end)
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end)
    end
end)
